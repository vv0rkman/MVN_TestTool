package com.vv0rkman.mvntesttool;

import com.vv0rkman.DB.DBOperations;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author vv0rkman
 * @version 1.2
 * 
 */

public class TestingFrame extends javax.swing.JFrame { 
    private static String cat;
    private static String id;
    private byte trueCount = 0;
    private byte qIndx = 0;    
    private static String[][] q_a;
    static int size1 = 0;   
    static int size2 = 0;
    int timerI = 14;  
    int progressI = timerI;    
/**
 * Override timer. Sets new values.
 */   
    javax.swing.Timer timer = new javax.swing.Timer(1000, new ActionListener()
        {        
        @Override
        public void actionPerformed(ActionEvent e) {            
            if (timerI == 0) 
                timer.stop();
            else 
                timerI--;              
            
        jProgressBar1.setMinimum(0);
        jProgressBar1.setMaximum(progressI);
        jProgressBar1.setValue(timerI);
        }
        } ); 
    
/**
 * Gets all question of "cat" category, starts timer and loads first question.
 * @param cat Category of questions
 * @param id User ID 
 */    
    public TestingFrame(String cat, String id) {           
        initComponents();        
        TestingFrame.cat = cat;
        TestingFrame.id = id;          
        
        InitArr();
        
        timer.start();
        nxtQ(0);        
    }   
    
    public static void InitArr(){
        try {     
            q_a = readArr(cat);
        } catch (SQLException ex) {
            Logger.getLogger(TestingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TestTool. OOP Edition.");
        setResizable(false);
        setSize(new java.awt.Dimension(540, 340));

        jLabel1.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        jLabel1.setText("TestTool. OOP Edition.");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel2.setText("Питання 1:");

        buttonGroup1.add(jToggleButton1);
        jToggleButton1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jToggleButton1.setText("jToggleButton1");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButton2);
        jToggleButton2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jToggleButton2.setText("jToggleButton2");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButton3);
        jToggleButton3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jToggleButton3.setText("jToggleButton3");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Тестування");

        jProgressBar1.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jToggleButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
/**
 * Checks timer value and saves correct answer, or not.
 * After that, sets new timer values, loads next question and saves result.
 * @param evt 
 */
    private void jToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonActionPerformed
        if ((timerI != 0) && (evt.getActionCommand().equals(q_a[qIndx][4])))
            trueCount++;        
        qIndx++;        
        timerChng();
    }//GEN-LAST:event_jToggleButtonActionPerformed
/**
 * Loads question data in a buttons.
 * @param qIndx Question number
 */            
    private void nxtQ(int qIndx){
        jLabel2.setText(q_a[qIndx][0]);
        jToggleButton1.setText(q_a[qIndx][1]);
        jToggleButton2.setText(q_a[qIndx][2]);
        jToggleButton3.setText(q_a[qIndx][3]);                  
    }
    
    public void timerChng(){
            if (qIndx < size1) {            
               timer.stop();
               if ((qIndx > size1/3) && (qIndx < size1/2)) {
                   timerI = 10;
               }
               else
                   if (qIndx >= size1/2) {
                       timerI = 8;
                   } 
                   else
                   timerI = 14;
                       
               nxtQ(qIndx);            
               progressI = timerI;
               timer.start();               
        }
        else {            
            super.dispose();       
            
            sendRes();
            
            new Results(size1 , trueCount).setVisible(true);
        }
    }
    
    public void sendRes(){
        try {
            DBOperations.sendRes(trueCount, id, cat);
            DBOperations.close();
        } catch (SQLException ex) {
            Logger.getLogger(TestingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
/**
 * Transforms data into multidimensional array
 * @param cat Category of questions
 * @return Multidimensional array
 * @throws SQLException 
 */    
    public static String[][] readArr(String cat) throws SQLException{
        int s1 = 0, s2, i = 2;        
        String[][] data;                    
        
        ResultSet qstns = DBOperations.getQstns("WHERE category = '"+cat+"';");                
        int count = DBOperations.getCount("WHERE category = '"+cat+"';");   
        
   
                size1 = count;
                size2 = 5;                    
                data = new String[size1][size2];
                    while(qstns.next()) {
                    for (s2 = 0; s2 < size2; s2++) {                          
                        data[s1][s2] = qstns.getString(i);                                               
                        i++;                        
                    }   
                    i = 2;
                    s1++;                    
                    } 

        List <String[]> list = (List<String[]> ) Arrays.asList(data);
        Collections.shuffle(list);
        data = (String[][]) list.toArray(new String[0][]);
                    
        return data;
        }
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>   
    }     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    // End of variables declaration//GEN-END:variables
}
